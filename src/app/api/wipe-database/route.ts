import { NextResponse } from "next/server";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export async function DELETE() {
  try {
    console.log("üî• –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å–Ω–∞—á–∞–ª–∞ –∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã)
    await prisma.userTask.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ UserTask");
    
    await prisma.userGift.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ UserGift");
    
    await prisma.user.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ User");
    
    await prisma.family.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ Family");
    
    await prisma.task.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ Task");
    
    await prisma.gift.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ Gift");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å—ë —É–¥–∞–ª–µ–Ω–æ
    const counts = {
      users: await prisma.user.count(),
      families: await prisma.family.count(),
      tasks: await prisma.task.count(),
      gifts: await prisma.gift.count(),
      userTasks: await prisma.userTask.count(),
      userGifts: await prisma.userGift.count()
    };

    console.log("üî• –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!");

    return NextResponse.json({
      success: true,
      message: "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω–∞!",
      counts,
      warning: "–í–°–ï –î–ê–ù–ù–´–ï –£–î–ê–õ–ï–ù–´! –¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ö–µ–º—É –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.",
      nextSteps: [
        "1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ /api/add-family-system –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º–µ–π–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
        "2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ /api/init-content –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á –∏ –ø–æ–¥–∞—Ä–∫–æ–≤", 
        "3. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ–º—å—é —á–µ—Ä–µ–∑ /register-family"
      ]
    });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
    return NextResponse.json({
      success: false,
      error: "–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 });

  } finally {
    await prisma.$disconnect();
  }
}

// –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º GET –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —É–¥–∞–ª–∏—Ç—å)
export async function GET() {
  return NextResponse.json({
    warning: "‚ö†Ô∏è –û–ü–ê–°–ù–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø!",
    message: "–≠—Ç–æ—Ç endpoint –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã.",
    instruction: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ DELETE –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏.",
    example: "curl -X DELETE https://family-stars.vercel.app/api/wipe-database"
  });
} 