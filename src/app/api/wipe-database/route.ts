import { NextResponse } from "next/server";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

export async function DELETE() {
  try {
    console.log("üî• –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–µ–º–µ–π...");
    
    // –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –¥–∞–Ω–Ω—ã–µ
    await prisma.userTask.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ UserTask");
    
    await prisma.userGift.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ UserGift");
    
    await prisma.user.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ User");
    
    await prisma.family.deleteMany({});
    console.log("‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ Family");

    // –ó–∞–¥–∞—á–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ –æ—Å—Ç–∞–≤–ª—è–µ–º!
    const counts = {
      users: await prisma.user.count(),
      families: await prisma.family.count(),
      tasks: await prisma.task.count(),
      gifts: await prisma.gift.count(),
      userTasks: await prisma.userTask.count(),
      userGifts: await prisma.userGift.count()
    };

    console.log("üî• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Å–µ–º—å–∏ —É–¥–∞–ª–µ–Ω—ã! –ó–∞–¥–∞—á–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.");

    return NextResponse.json({
      success: true,
      message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Å–µ–º—å–∏ —É–¥–∞–ª–µ–Ω—ã! –ó–∞–¥–∞—á–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.",
      counts,
      warning: "–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò –ò –°–ï–ú–¨–ò –£–î–ê–õ–ï–ù–´! –ó–∞–¥–∞—á–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å.",
      nextSteps: [
        "1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ /api/add-family-system –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ–º–µ–π–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã",
        "2. –°–æ–∑–¥–∞–π—Ç–µ —Å–µ–º—å—é —á–µ—Ä–µ–∑ /register-family"
      ]
    });

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error);
    return NextResponse.json({
      success: false,
      error: "–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 });

  } finally {
    await prisma.$disconnect();
  }
}

// –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–º GET –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—á—Ç–æ–±—ã —Å–ª—É—á–∞–π–Ω–æ –Ω–µ —É–¥–∞–ª–∏—Ç—å)
export async function GET() {
  return NextResponse.json({
    warning: "‚ö†Ô∏è –û–ü–ê–°–ù–ê–Ø –û–ü–ï–†–ê–¶–ò–Ø!",
    message: "–≠—Ç–æ—Ç endpoint —É–¥–∞–ª–∏—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–µ–º—å–∏ (–∑–∞–¥–∞—á–∏ –∏ –ø–æ–¥–∞—Ä–∫–∏ –æ—Å—Ç–∞–Ω—É—Ç—Å—è).",
    instruction: "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ DELETE –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏.",
    example: "curl -X DELETE https://family-stars.vercel.app/api/wipe-database"
  });
} 