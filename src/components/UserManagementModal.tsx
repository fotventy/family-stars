import React, { useState, useEffect } from 'react';
import { Modal } from './Modal';

interface UserManagementModalProps {
  isOpen: boolean;
  onClose: () => void;
  users: any[];
  editingUser?: any;
  onCreateUser: (name: string, password: string, role: string) => Promise<void>;
  onUpdateUser: (userId: string, name: string, password?: string) => Promise<void>;
  onDeleteUser: (userId: string) => Promise<void>;
}

export const UserManagementModal: React.FC<UserManagementModalProps> = ({
  isOpen,
  onClose,
  users,
  editingUser,
  onCreateUser,
  onUpdateUser,
  onDeleteUser
}) => {
  const [newUserName, setNewUserName] = useState('');
  const [newUserPassword, setNewUserPassword] = useState('');
  const [newUserRole, setNewUserRole] = useState('CHILD');
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const [editName, setEditName] = useState('');
  const [editPassword, setEditPassword] = useState('');

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ editingUser
  useEffect(() => {
    if (editingUser) {
      setEditName(editingUser.name);
      setEditPassword(''); // –ü–∞—Ä–æ–ª—å –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–∑ —Å–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    }
  }, [editingUser]);

  const handleCreateUser = async (e: React.FormEvent) => {
    e.preventDefault();
    await onCreateUser(newUserName, newUserPassword, newUserRole);
    setNewUserName('');
    setNewUserPassword('');
    setNewUserRole('CHILD');
  };

  const handleUpdateUser = async (e: React.FormEvent) => {
    e.preventDefault();
    if (editingUser) {
      await onUpdateUser(editingUser.id, editName, editPassword || undefined);
      setEditName('');
      setEditPassword('');
      onClose();
    }
  };

  const cancelEdit = () => {
    setEditName('');
    setEditPassword('');
    onClose();
  };

  const getUserEmoji = (role: string) => {
    if (role === 'PARENT') return 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶';
    return 'üë∂';
  };

  const getRoleText = (role: string) => {
    if (role === 'PARENT') return '–†–æ–¥–∏—Ç–µ–ª—å';
    return '–†–µ–±—ë–Ω–æ–∫';
  };

  return (
    <Modal isOpen={isOpen} onClose={onClose} title={editingUser ? `‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${editingUser.name}` : "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞"}>
      <div style={{ color: 'white' }}>
        {/* –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {!editingUser && (
          <form onSubmit={handleCreateUser} style={{ marginBottom: '32px' }}>
            <div style={{ marginBottom: '16px' }}>
              <label style={{ 
                display: 'block', 
                color: 'white', 
                fontWeight: 'bold', 
                marginBottom: '8px',
                fontSize: '16px'
              }}>
                üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </label>
              <input 
                type="text" 
                value={newUserName}
                onChange={(e) => setNewUserName(e.target.value)}
                style={{
                  width: '100%',
                  maxWidth: '400px',
                  padding: '14px 18px',
                  border: 'none',
                  borderRadius: '0',
                  backdropFilter: 'blur(10px)',
                  color: 'white',
                  fontSize: '15px',
                  fontWeight: '500',
                  outline: 'none',
                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)'
                }}
                onFocus={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.2)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
                }}
                onBlur={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.1)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
                }}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª—ë–Ω–∞"
                required 
              />
            </div>
            <div style={{ marginBottom: '16px' }}>
              <label style={{ 
                display: 'block', 
                color: 'white', 
                fontWeight: 'bold', 
                marginBottom: '8px',
                fontSize: '16px'
              }}>
                üîí –ü–∞—Ä–æ–ª—å
              </label>
              <input 
                type="password" 
                value={newUserPassword}
                onChange={(e) => setNewUserPassword(e.target.value)}
                style={{
                  width: '100%',
                  maxWidth: '400px',
                  padding: '14px 18px',
                  border: 'none',
                  borderRadius: '0',
                  backdropFilter: 'blur(10px)',
                  color: 'white',
                  fontSize: '15px',
                  fontWeight: '500',
                  outline: 'none',
                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)'
                }}
                onFocus={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.2)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
                }}
                onBlur={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.1)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
                }}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                required 
              />
            </div>
            <div style={{ marginBottom: '24px' }}>
              <label style={{ 
                display: 'block', 
                color: 'white', 
                fontWeight: 'bold', 
                marginBottom: '8px',
                fontSize: '16px'
              }}>
                üè∑Ô∏è –†–æ–ª—å
              </label>
              <select 
                value={newUserRole}
                onChange={(e) => setNewUserRole(e.target.value)}
                style={{
                  width: '100%',
                  maxWidth: '400px',
                  padding: '14px 18px',
                  border: 'none',
                  borderRadius: '0',
                  backdropFilter: 'blur(10px)',
                  color: 'white',
                  fontSize: '15px',
                  fontWeight: '500',
                  outline: 'none',
                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)'
                }}
                onFocus={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.2)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
                }}
                onBlur={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.1)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
                }}
              >
                <option value="CHILD" style={{ background: '#333', color: 'white' }}>üë∂ –†–µ–±—ë–Ω–æ–∫</option>
                <option value="PARENT" style={{ background: '#333', color: 'white' }}>üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –†–æ–¥–∏—Ç–µ–ª—å</option>
              </select>
            </div>
            <button 
              type="submit" 
              className="game-button"
              style={{ width: '100%' }}
            >
              ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            </button>
          </form>
        )}

        {/* –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {editingUser && (
          <form onSubmit={handleUpdateUser} style={{ marginBottom: '32px' }}>
            <div style={{ marginBottom: '16px' }}>
              <label style={{ 
                display: 'block', 
                color: 'white', 
                fontWeight: 'bold', 
                marginBottom: '8px',
                fontSize: '16px'
              }}>
                üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </label>
              <input 
                type="text" 
                value={editName}
                onChange={(e) => setEditName(e.target.value)}
                style={{
                  width: '100%',
                  maxWidth: '400px',
                  padding: '14px 18px',
                  border: 'none',
                  borderRadius: '0',
                  backdropFilter: 'blur(10px)',
                  color: 'white',
                  fontSize: '15px',
                  fontWeight: '500',
                  outline: 'none',
                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)'
                }}
                onFocus={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.2)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
                }}
                onBlur={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.1)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
                }}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª—ë–Ω–∞"
                required 
              />
            </div>
            <div style={{ marginBottom: '24px' }}>
              <label style={{ 
                display: 'block', 
                color: 'white', 
                fontWeight: 'bold', 
                marginBottom: '8px',
                fontSize: '16px'
              }}>
                üîí –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º, —á—Ç–æ–±—ã –Ω–µ –º–µ–Ω—è—Ç—å)
              </label>
              <input 
                type="password" 
                value={editPassword}
                onChange={(e) => setEditPassword(e.target.value)}
                style={{
                  width: '100%',
                  maxWidth: '400px',
                  padding: '14px 18px',
                  borderRadius: '16px',
                  border: '2px solid rgba(255, 255, 255, 0.2)',
                  background: 'rgba(255, 255, 255, 0.1)',
                  backdropFilter: 'blur(10px)',
                  color: 'white',
                  fontSize: '15px',
                  fontWeight: '500',
                  outline: 'none',
                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',
                  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)'
                }}
                onFocus={(e) => {
                  e.target.style.transform = 'translateY(-2px)';
                  e.target.style.boxShadow = '0 8px 30px rgba(0, 0, 0, 0.2)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.4)';
                }}
                onBlur={(e) => {
                  e.target.style.transform = 'translateY(0)';
                  e.target.style.boxShadow = '0 4px 20px rgba(0, 0, 0, 0.1)';
                  e.target.style.borderColor = 'rgba(255, 255, 255, 0.2)';
                }}
                placeholder="–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)"
              />
            </div>
            <div style={{ display: 'flex', gap: '12px' }}>
              <button 
                type="submit" 
                className="game-button"
                style={{ flex: 1 }}
              >
                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </button>
              <button 
                type="button"
                onClick={cancelEdit}
                className="game-button"
                style={{ 
                  flex: 1,
                  background: 'linear-gradient(135deg, #6b7280 0%, #4b5563 100%)'
                }}
              >
                ‚ùå –û—Ç–º–µ–Ω–∞
              </button>
            </div>
          </form>
        )}


      </div>
    </Modal>
  );
}; 